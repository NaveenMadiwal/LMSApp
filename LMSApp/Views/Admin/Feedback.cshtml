@model List<LMSApp.Models.ViewModels.FeedbackViewModel>
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Feedback Management";
}

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0">Feedback Management</h1>
            <p class="text-muted">View and manage student feedback for all courses</p>
        </div>
       @*  <div>
            <a href="@Url.Action("FeedbackAnalytics")" class="btn btn-info">
                <i class="fas fa-chart-bar me-2"></i>Analytics
            </a>
        </div> *@
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0">@Model.Count</h4>
                            <p class="mb-0">Total Feedback</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-comments fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0">@Model.Count(f => f.Rating >= 4)</h4>
                            <p class="mb-0">Positive (4-5★)</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-thumbs-up fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0">@Model.Count(f => f.Rating == 3)</h4>
                            <p class="mb-0">Neutral (3★)</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-minus-circle fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-danger text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0">@Model.Count(f => f.Rating <= 2)</h4>
                            <p class="mb-0">Negative (1-2★)</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-thumbs-down fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="row">
                <div class="col-md-3">
                    <label class="form-label">Filter by Rating</label>
                    <select class="form-select" id="ratingFilter">
                        <option value="">All Ratings</option>
                        <option value="5">5 Stars</option>
                        <option value="4">4 Stars</option>
                        <option value="3">3 Stars</option>
                        <option value="2">2 Stars</option>
                        <option value="1">1 Star</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Filter by Course</label>
                    <select class="form-select" id="courseFilter">
                        <option value="">All Courses</option>
                        @foreach (var course in Model.Select(f => f.CourseTitle).Distinct().OrderBy(c => c))
                        {
                            <option value="@course">@course</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Sort By</label>
                    <select class="form-select" id="sortFilter">
                        <option value="date">Date (Newest)</option>
                        <option value="rating">Rating (High to Low)</option>
                        <option value="course">Course Name</option>
                        <option value="student">Student Name</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">&nbsp;</label>
                    <button class="btn btn-primary w-100" onclick="applyFilters()">
                        <i class="fas fa-filter me-2"></i>Apply Filters
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Feedback List -->
    <div class="card">
        <div class="card-header">
            <h5 class="card-title mb-0">
                <i class="fas fa-list me-2"></i>Student Feedback
            </h5>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover" id="feedbackTable">
                        <thead>
                            <tr>
                                <th>Student</th>
                                <th>Course</th>
                                <th>Rating</th>
                                <th>Comments</th>
                                <th>Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var feedback in Model.OrderByDescending(f => f.SubmittedAt))
                            {
                                <tr class="feedback-row" 
                                    data-rating="@feedback.Rating" 
                                    data-course="@feedback.CourseTitle">
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-sm bg-primary rounded-circle d-flex align-items-center justify-content-center me-2">
                                                <i class="fas fa-user text-white"></i>
                                            </div>
                                            <div>
                                                <div class="fw-bold">@feedback.StudentName</div>
                                                @* <small class="text-muted">@feedback.StudentId</small> *@
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="fw-bold">@feedback.CourseTitle</div>
                                    </td>
                                    <td>
                                        <div class="star-rating">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                if (i <= feedback.Rating)
                                                {
                                                    <i class="fas fa-star text-warning"></i>
                                                }
                                                else
                                                {
                                                    <i class="far fa-star text-muted"></i>
                                                }
                                            }
                                            <span class="ms-2 fw-bold">@feedback.Rating/5</span>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="feedback-comment">
                                            @if (!string.IsNullOrEmpty(feedback.Comments))
                                            {
                                                <p class="mb-0">@feedback.Comments</p>
                                            }
                                            else
                                            {
                                                <span class="text-muted">No comments</span>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <div class="text-muted">
                                            <i class="fas fa-calendar me-1"></i>
                                            @feedback.SubmittedAt.ToString("MMM dd, yyyy")
                                        </div>
                                        <small class="text-muted">
                                            @feedback.SubmittedAt.ToString("HH:mm")
                                        </small>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button class="btn btn-sm btn-outline-primary" 
                                                    onclick="viewFeedbackDetails(@feedback.Id)" 
                                                    title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                           @*  <button class="btn btn-sm btn-outline-success" 
                                                    onclick="replyToFeedback(@feedback.Id)" 
                                                    title="Reply">
                                                <i class="fas fa-reply"></i>
                                            </button> *@
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-comments fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No feedback available</h5>
                    <p class="text-muted">Students haven't submitted any feedback yet.</p>
                </div>
            }
        </div>
    </div>
</div>

<!-- Feedback Details Modal -->
<div class="modal fade" id="feedbackDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Feedback Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="feedbackDetailsContent">
                <!-- Content will be loaded here -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function applyFilters() {
            const ratingFilter = document.getElementById('ratingFilter').value;
            const courseFilter = document.getElementById('courseFilter').value;
            const sortFilter = document.getElementById('sortFilter').value;
            
            const rows = document.querySelectorAll('.feedback-row');
            
            rows.forEach(row => {
                const rating = row.getAttribute('data-rating');
                const course = row.getAttribute('data-course');
                
                let showRow = true;
                
                if (ratingFilter && rating !== ratingFilter) {
                    showRow = false;
                }
                
                if (courseFilter && course !== courseFilter) {
                    showRow = false;
                }
                
                row.style.display = showRow ? '' : 'none';
            });
            
            // Apply sorting
            const tbody = document.querySelector('#feedbackTable tbody');
            const rowsArray = Array.from(rows);
            
            rowsArray.sort((a, b) => {
                switch(sortFilter) {
                    case 'rating':
                        return parseInt(b.getAttribute('data-rating')) - parseInt(a.getAttribute('data-rating'));
                    case 'course':
                        return a.getAttribute('data-course').localeCompare(b.getAttribute('data-course'));
                    case 'student':
                        const studentA = a.querySelector('.fw-bold').textContent;
                        const studentB = b.querySelector('.fw-bold').textContent;
                        return studentA.localeCompare(studentB);
                    default: // date
                        return 0; // Already sorted by date in the view
                }
            });
            
            rowsArray.forEach(row => tbody.appendChild(row));
        }
        
        function viewFeedbackDetails(feedbackId) {
            // Load feedback details via AJAX
            fetch(`/Admin/GetFeedbackDetails/${feedbackId}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('feedbackDetailsContent').innerHTML = html;
                    new bootstrap.Modal(document.getElementById('feedbackDetailsModal')).show();
                })
                .catch(error => {
                    console.error('Error loading feedback details:', error);
                    alert('Error loading feedback details');
                });
        }
        
        function replyToFeedback(feedbackId) {
            // Implement reply functionality
            alert('Reply functionality will be implemented');
        }
        
        // Initialize tooltips
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[title]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>
} 